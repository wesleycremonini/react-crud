{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/SignUp.js","components/Dashboard.js","components/Login.js","components/ForgotPassword.js","components/UpdateProfile.js","contexts/DBContext.js","components/Posts.js","components/CreatePost.js","components/Name.js","components/EditPost.js","App.js","index.js"],"names":["app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getFirestore","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","upEmail","updateEmail","upPassword","updatePassword","upProfile","name","URL","updateProfile","Provider","SignUp","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","navigate","useNavigate","e","a","preventDefault","current","length","className","style","minHeight","Card","Body","Alert","variant","Form","onSubmit","Group","Label","Control","type","ref","required","Spinner","animation","Stack","gap","Button","to","Dashboard","Image","src","photoURL","roundedCircle","border","width","maxWidth","height","maxHeight","displayName","onClick","Login","ForgotPassword","message","setMessage","UpdateProfile","photoURLRef","promises","push","Promise","all","then","catch","finally","defaultValue","placeholder","DBContext","useDB","DBProvider","posts","setPosts","postsRef","collection","typeValue","infoValue","assignedValue","addDoc","info","status","assigned","color","postRef","statusValue","postDoc","doc","updateDoc","deleteDoc","getDocs","data","docs","map","id","fetchPosts","createPost","editPost","deletePost","Posts","search","setSearch","searchTag","setSearchTag","setTimeout","md","Badge","bg","cursor","Select","onChange","target","toLowerCase","InputGroup","disabled","icon","faSearch","Row","xs","Col","lg","post","idx","includes","Header","faEdit","Footer","CreatePost","infoRef","typeRef","nameRef","EditPost","statusRef","App","exact","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d43e3e38.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\n\r\n\r\nconst app = initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n})\r\n\r\nexport const auth = getAuth(app);\r\nexport const db = getFirestore(app);\r\nexport default app;","import React, { useContext, useState, useEffect } from 'react';\r\nimport { auth } from '../firebase'\r\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, sendPasswordResetEmail, updateEmail, updatePassword, updateProfile } from 'firebase/auth';\r\n\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n    const [currentUser, setCurrentUser] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    function signup(email, password) {\r\n        return createUserWithEmailAndPassword(auth, email, password);\r\n        // TROCAR FUNCTION PRA DATABASE Q TO USANDO\r\n    }\r\n\r\n    function login(email, password) {\r\n        return signInWithEmailAndPassword(auth, email, password);\r\n        // TROCAR FUNCTION PRA DATABASE Q TO USANDO\r\n    }\r\n\r\n    function logout() {\r\n        return signOut(auth);\r\n        // TROCAR FUNCTION PRA DATABASE Q TO USANDO\r\n    }\r\n\r\n    function resetPassword(email) {\r\n        return sendPasswordResetEmail(auth, email);\r\n        // TROCAR FUNCTION PRA DATABASE Q TO USANDO\r\n    }\r\n\r\n    function upEmail(email) {\r\n        return updateEmail(currentUser, email)\r\n        // TROCAR FUNCTION PRA DATABASE Q TO USANDO\r\n    };\r\n\r\n    function upPassword(password) {\r\n        return updatePassword(currentUser, password)\r\n        // TROCAR FUNCTION PRA DATABASE Q TO USANDO\r\n    }\r\n\r\n    function upProfile(name, URL) {\r\n        return updateProfile(currentUser, name, URL)\r\n        // TROCAR FUNCTION PRA DATABASE Q TO USANDO\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user);\r\n            setLoading(false);\r\n        })\r\n\r\n        return unsubscribe\r\n    }, [])\r\n    \r\n\r\n    const value = {\r\n        currentUser,\r\n        signup,\r\n        login,\r\n        logout,\r\n        resetPassword,\r\n        upEmail,\r\n        upPassword,\r\n        upProfile\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport { Form, Button, Card, Alert, Spinner, Stack } from 'react-bootstrap'\r\n\r\n//contexts\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\n//routing\r\nimport { Link, useNavigate } from 'react-router-dom'\r\n\r\n\r\nfunction SignUp() {\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const passwordConfirmRef = useRef();\r\n    const { signup } = useAuth();\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const navigate = useNavigate();\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Senhas não são iguais')\r\n        } else if (passwordRef.current.value.length < 6) {\r\n            return setError('Senha muito curta')\r\n        };\r\n\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            await signup(emailRef.current.value, passwordRef.current.value)\r\n            navigate(\"/nome\")\r\n\r\n        } catch {\r\n            setError('Não foi possível criar uma conta')\r\n            setLoading(false);\r\n        };\r\n    }\r\n\r\n    return (\r\n    <div className='bg-primary d-flex align-items-center' style={{ minHeight: \"100vh\" }}>\r\n\r\n        <Card className='col-8 mx-auto'>\r\n            <Card.Body>\r\n                <h2 className='text-center mb-4'>Cadastro</h2>\r\n                {error && <Alert variant='danger'>{error}</Alert>}\r\n                <Form onSubmit={handleSubmit} className='d-flex flex-column'>\r\n                    \r\n                    <Form.Group className='mb-3'>\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" ref={emailRef} required />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className='mb-3'>\r\n                        <Form.Label>Senha</Form.Label>\r\n                        <Form.Control type=\"password\" ref={passwordRef} required />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className='mb-3'>\r\n                        <Form.Label>Repita a Senha</Form.Label>\r\n                        <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n                    </Form.Group>\r\n\r\n                    {loading ? <Spinner animation=\"border align-self-center\" /> : \r\n                    <Stack gap={2}>\r\n                        <Button className='w-100' type='submit'>Cadastrar</Button>\r\n                        <Link to='/login'><Button className='w-100' variant=\"outline-primary\">Já tenho uma conta</Button></Link>\r\n                    </Stack>\r\n                }\r\n\r\n                </Form>\r\n            </Card.Body>\r\n        </Card>\r\n    </div>\r\n    )\r\n\r\n};\r\n\r\nexport default SignUp;\r\n","import React, { useState } from 'react';\r\n\r\n//bootstrap\r\nimport { Card, Button, Alert, Image, Stack } from 'react-bootstrap'\r\n\r\n//context hook\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\n//routing\r\nimport { Link, useNavigate } from 'react-router-dom'\r\n\r\nexport default function Dashboard() {\r\n    const [error, setError] = useState('');\r\n    const { currentUser, logout } = useAuth();\r\n    const navigate = useNavigate()\r\n\r\n    async function handleLogout() {\r\n        setError('')\r\n\r\n        try {\r\n            await logout();\r\n            navigate(\"/login\")\r\n        } catch {\r\n            setError('Falha ao sair');\r\n        }\r\n    }\r\n\r\n    return (\r\n    <div className='bg-primary d-flex align-items-center' style={{ minHeight: \"100vh\" }}>\r\n        <Card className='col-8 mx-auto'>\r\n            <Card.Body className='d-flex flex-column align-items-center'>\r\n\r\n                <h2 className='text-center mb-4'>Perfil</h2>\r\n                {error && <Alert variant='danger'>{error}</Alert>}\r\n\r\n                <Image src={currentUser.photoURL} roundedCircle\r\n                border=\"primary\"\r\n                style={{\r\n                    width: '100%',\r\n                    maxWidth: '128px',\r\n                    height: \"100%\",\r\n                    maxHeight: \"128px\"\r\n                }}/>\r\n\r\n                <p className='mt-4'><strong>Nome: </strong>{currentUser.displayName}</p>\r\n\r\n                <p><strong>Email: </strong>{currentUser.email}</p>\r\n                <Stack gap={2}>\r\n                    <Link to=\"/posts\" className='btn btn-primary w-100 mt-3'>Ir para Posts</Link>\r\n\r\n                    <Link to=\"/update-profile\" className='btn btn-primary w-100 mt-3'>Atualizar Perfil</Link>\r\n                    <Link to='/posts'><Button className='w-100' variant=\"outline-primary\">Voltar</Button></Link>\r\n                    <Button variant='outline-danger' onClick={handleLogout}>Sair</Button>\r\n                </Stack>\r\n            </Card.Body>\r\n        </Card>\r\n    </div>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport { Form, Button, Card, Alert, Spinner, Stack } from 'react-bootstrap'\r\n\r\n//contexts\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\n//routing\r\nimport { Link, useNavigate } from 'react-router-dom'\r\n\r\nfunction Login() {\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const { login } = useAuth();\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const navigate = useNavigate();\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            await login(emailRef.current.value, passwordRef.current.value)\r\n            navigate(\"/posts\");\r\n        } catch {\r\n            setError('Algo deu errado');\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n    <div className='bg-primary d-flex align-items-center' style={{ minHeight: \"100vh\" }}>\r\n        <Card className='col-8 mx-auto'>\r\n            <Card.Body>\r\n                <h2 className='text-center mb-4'>Entrar</h2>\r\n                {error && <Alert variant='danger'>{error}</Alert>}\r\n                <Form onSubmit={handleSubmit} className='d-flex flex-column'>\r\n                    \r\n                    <Form.Group className='mb-3'>\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" ref={emailRef} required />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className='mb-3'>\r\n                        <Form.Label>Senha</Form.Label>\r\n                        <Form.Control type=\"password\" ref={passwordRef} required />\r\n                    </Form.Group>\r\n                    \r\n                    {loading ? <Spinner animation=\"border align-self-center\" /> : \r\n                    <Stack gap={2}>\r\n                        <Button className='w-100' type='submit'>Entrar</Button>\r\n                        <Link to='/cadastro'><Button className='w-100' variant=\"outline-primary\">Criar uma conta</Button></Link>\r\n                        <Link to='/esqueci-senha'><Button className='w-100' variant=\"outline-danger\">Esqueci minha senha</Button></Link>\r\n                    </Stack>\r\n                    }\r\n                </Form>\r\n            </Card.Body>\r\n        </Card>\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default Login;\r\n","import React, { useRef, useState } from 'react';\r\nimport { Form, Button, Card, Alert, Spinner, Stack } from 'react-bootstrap'\r\n\r\n//contexts\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\n//routing\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function ForgotPassword() {\r\n    const emailRef = useRef();\r\n    const { resetPassword } = useAuth();\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [message, setMessage] = useState('')\r\n\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            setError('')\r\n            setMessage('')\r\n            setLoading(true)\r\n            await resetPassword(emailRef.current.value)\r\n            setMessage('Instruções foram enviadas ao seu email')\r\n        } catch {\r\n            setError('Não foi possível resetar a senha')\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n    <div className='bg-primary d-flex align-items-center' style={{ minHeight: \"100vh\" }}>\r\n\r\n        <Card className='col-8 mx-auto'>\r\n            <Card.Body>\r\n                <h2 className='text-center mb-4'>Resetar Senha</h2>\r\n                {error && <Alert variant='danger'>{error}</Alert>}\r\n                {message && <Alert variant='success'>{message}</Alert>}\r\n                <Form onSubmit={handleSubmit} className='d-flex flex-column'>\r\n                    \r\n                    <Form.Group className='mb-3'>\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" ref={emailRef} required />\r\n                    </Form.Group>\r\n\r\n                    {loading ? <Spinner animation=\"border align-self-center\" /> :\r\n                    <Stack gap={2}>\r\n                        <Button className='w-100' type='submit'>Resetar Senha</Button>\r\n                        <Link to='/login'><Button className='w-100' variant=\"outline-primary\">Entrar</Button></Link>\r\n                        <Link to='/cadastro'><Button className='w-100' variant=\"outline-danger\">Criar uma conta</Button></Link>\r\n                    </Stack>\r\n                    }\r\n\r\n                </Form>\r\n            </Card.Body>\r\n        </Card>\r\n    </div>\r\n    )\r\n};\r\n\r\n","import React, { useRef, useState } from 'react';\r\nimport { Form, Button, Card, Alert, Spinner, Stack } from 'react-bootstrap'\r\n\r\n//contexts\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\n//routing\r\nimport { Link, useNavigate } from 'react-router-dom'\r\n\r\n\r\n\r\nexport default function UpdateProfile() {\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const passwordConfirmRef = useRef();\r\n    const photoURLRef = useRef();\r\n    const { currentUser, upEmail, upPassword, upProfile } = useAuth();\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const navigate = useNavigate();\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Senhas não são iguais')\r\n        } else if (passwordRef.current.value.length !== 0 && passwordRef.current.value.length < 6) {\r\n            return setError('Senha muito curta')\r\n        };\r\n\r\n        const promises = [];\r\n        setLoading(true)\r\n        setError('')\r\n\r\n        if (emailRef.current.value !== currentUser.email) {\r\n            promises.push(upEmail(emailRef.current.value))\r\n        };\r\n        if (passwordRef.current.value) {\r\n            promises.push(upPassword(passwordRef.current.value))\r\n        };\r\n        if (photoURLRef.current.value !== currentUser.photoURL) {\r\n            promises.push(upProfile({displayName: currentUser.displayName, photoURL: photoURLRef.current.value}))\r\n        }\r\n        \r\n        Promise.all(promises).then(() => {\r\n            navigate(\"/\")\r\n        }).catch(() => {\r\n            setError('Falha ao atualizar')\r\n        }).finally(() => {\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='bg-primary d-flex align-items-center' style={{ minHeight: \"100vh\" }}>\r\n            <Card className='col-8 mx-auto'>\r\n                <Card.Body >\r\n                    <h2 className='text-center mb-4'>Atualizar Perfil</h2>\r\n                    {error && <Alert variant='danger'>{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit} className='d-flex flex-column'>\r\n                        \r\n                        <Form.Group className='mb-3'>\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required defaultValue={currentUser.email}/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className='mb-3'>\r\n                            <Form.Label>Senha</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordRef} placeholder='Deixe em branco para manter'/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className='mb-3'>\r\n                            <Form.Label>Repita a Senha</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordConfirmRef} placeholder='Deixe em branco para manter'/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className='mb-3'>\r\n                            <Form.Label>Foto de perfil: (URL)</Form.Label>\r\n                            <Form.Control type=\"url\" ref={photoURLRef} \r\n                            defaultValue={currentUser.photoURL}\r\n                            placeholder='Não obrigatório'/>\r\n                        </Form.Group>\r\n\r\n                        {loading ? <Spinner animation=\"border align-self-center\" /> : \r\n                        <Stack gap={2}>\r\n                            <Button className='w-100' type='submit'>Confirmar</Button>\r\n                            <Link to='/'><Button className='w-100' variant=\"outline-danger\">Cancelar</Button></Link>\r\n                        </Stack>\r\n                        }\r\n\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n};\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { db } from '../firebase';\r\nimport { collection, getDocs, addDoc, updateDoc, deleteDoc, doc } from 'firebase/firestore'\r\n\r\nconst DBContext = React.createContext();\r\n\r\nexport function useDB() {\r\n    return useContext(DBContext);\r\n}\r\n\r\nexport function DBProvider({ children }) {\r\n    const [loading, setLoading] = useState(true);\r\n    const [posts, setPosts] = useState([]);\r\n    const postsRef = collection(db, \"posts\");\r\n\r\n\r\n    async function createPost(typeValue, infoValue, assignedValue) {\r\n        return await addDoc(postsRef, { type: typeValue, info: infoValue, status: \"abertos\", assigned: assignedValue,\r\n            color: typeValue === 'Bug' ? \"danger\" : typeValue === \"Tarefa\" ? 'primary' : typeValue === 'Documentação' ? \"dark\" : \"warning\"\r\n        })\r\n    };\r\n    \r\n    async function editPost(postRef, typeValue, infoValue, assignedValue, statusValue) {\r\n        const postDoc = doc(db, 'posts', postRef)\r\n        return await updateDoc(postDoc, { type: typeValue, info: infoValue, status: statusValue, assigned: assignedValue,\r\n            color: typeValue === 'Bug' ? \"danger\" : typeValue === \"Tarefa\" ? 'primary' : typeValue === 'Documentação' ? \"dark\" : \"warning\"\r\n        })\r\n    };\r\n\r\n    async function deletePost(typeValue, infoValue, assignedValue) {\r\n        return await deleteDoc(postsRef, { type: typeValue, info: infoValue, status: \"abertos\", assigned: assignedValue,\r\n            color: typeValue === 'Bug' ? \"danger\" : typeValue === \"Tarefa\" ? 'primary' : typeValue === 'Documentação' ? \"dark\" : \"warning\"\r\n        })\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        async function fetchPosts() {\r\n            const data = await getDocs(postsRef);\r\n            setPosts(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\r\n        };\r\n        fetchPosts();\r\n        setLoading(false);\r\n    }, [postsRef])\r\n    \r\n\r\n    const value = {\r\n        posts,\r\n        createPost,\r\n        editPost,\r\n        deletePost\r\n    }\r\n\r\n    return (\r\n        <DBContext.Provider value={value}>\r\n            {!loading && children}\r\n        </DBContext.Provider>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\n\r\n//routing\r\nimport { Link } from 'react-router-dom' \r\n//bootstrap\r\nimport { Card, Col, Button, Badge, Row, Image, InputGroup, Form } from 'react-bootstrap'\r\n\r\n//context DB\r\nimport { useDB } from '../contexts/DBContext';\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\n//font awesome\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch, faEdit } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default function Posts() {\r\n    const { posts } = useDB();\r\n    const { currentUser } = useAuth();\r\n    const [search, setSearch] = useState(\"\");\r\n    const [searchTag, setSearchTag] = useState(\"\");\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    function handleClear() {\r\n        setSearch(\"\");\r\n        setSearchTag(\"\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n        }, 500);\r\n        \r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ height: \"100px\" }} md={12} className='text-light justify-content-between align-items-center d-flex bg-dark p-3'>\r\n                <Badge bg=\"secondary\"><h3>BugTracker</h3></Badge>\r\n                <Link to='/'>\r\n                    <Button style={{border: \"none\"}} className='d-flex flex-row align-items-center bg-transparent'>\r\n                        <Image src={currentUser.photoURL} style={{width: \"50px\", height: \"50px\", cursor: \"pointer\"}} roundedCircle />\r\n                        <h5 className='ms-3'>Meu Perfil</h5>\r\n                    </Button>\r\n                </Link>\r\n            </div>\r\n\r\n            <div style={{ height: \"150px\" }} md={12} className='d-flex bg-light flex-column p-5 pb-0'>\r\n                <div className='col-12 d-flex flex-column gap-3 flex-md-row bg-light align-self-start'>\r\n                    <div className='d-flex flex-row align-items-center '>\r\n                        <h1>Sumário de Bugs</h1>\r\n                        <Link to='/create-post'><Button className='ms-4'><h4>Criar Bug</h4></Button></Link>\r\n                    </div>\r\n\r\n                    <div className='d-flex flex-row align-items-center  ms-auto'>\r\n                        <Form.Group className='w-50'>\r\n                            <Form.Select onChange={(e) => setSearchTag(e.target.value.toLowerCase())}>\r\n                                <option value=''>Todos</option>\r\n                                <option value=\"Bug\">Bug</option>\r\n                                <option value=\"Tarefa\">Tarefa</option>\r\n                                <option value=\"Crash\">Crash</option>\r\n                                <option value=\"Documentação\">Documentação</option>\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n                        <InputGroup className='w-100'>\r\n                            <Form.Control\r\n                            placeholder=\"Buscar...\"\r\n                            onChange={(e) => setSearch(e.target.value.toLowerCase())}\r\n                            />\r\n                            <Button variant=\"primary\" disabled>\r\n                                <FontAwesomeIcon icon={faSearch} />\r\n                            </Button>\r\n                        </InputGroup>\r\n                        <Button variant='success' className='ms-5 w-75' onClick={handleClear}>Limpar Filtros</Button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {!loading &&\r\n                <Row xs={12} md={12} style={{ minHeight: \"72vh\" }}\r\n                className='w-100 bg-light p-3 d-flex flex-row gap-4 justify-content-center'>\r\n\r\n                    <Col lg={2} className='bg-white d-flex flex-column rounded-3 p-3'>\r\n                        <h3 className='border-bottom border-info border-4'>Abertos</h3>\r\n                        {posts.map((post, idx) => \r\n                        <div key={idx}>\r\n                            {post.status === 'abertos' &&\r\n                            post.type.toLowerCase().includes(searchTag) &&\r\n                            (post.assigned.toLowerCase().includes(search) ||\r\n                            post.info.toLowerCase().includes(search) ||\r\n                            post.type.toLowerCase().includes(search)\r\n                                ) &&\r\n                            <Card border={post.color} className=\"text-center w-100 mt-2 p-0\">\r\n\r\n                                <Card.Header className={`text-light bg-${post.color}`}>\r\n                                    {post.type}\r\n                                    <Link to={`/edit/${post.id}`}><Button className='position-absolute top-0 end-0' variant='transparent'><FontAwesomeIcon icon={faEdit} color='white'/></Button></Link>\r\n                                </Card.Header>\r\n\r\n                                <Card.Body className='text-start'>\r\n                                    {post.info}\r\n                                </Card.Body>\r\n\r\n                                <Card.Footer>\r\n                                    {post.assigned}\r\n                                </Card.Footer>\r\n\r\n                            </Card>\r\n                            }\r\n                        </div>\r\n                            )}\r\n                    </Col>\r\n\r\n                    <Col lg={2} className='bg-white d-flex flex-column rounded-3 p-3'>\r\n                        <h3 className='border-bottom border-info border-4'>Reabertos</h3>\r\n                        {posts.map((post, idx) => \r\n                        <div key={idx}>\r\n                            {post.status === 'reabertos' &&\r\n                            post.type.toLowerCase().includes(searchTag) &&\r\n                            (post.assigned.toLowerCase().includes(search) ||\r\n                            post.info.toLowerCase().includes(search) ||\r\n                            post.type.toLowerCase().includes(search)\r\n                                ) &&\r\n                            <Card border={post.color} className=\"text-center mt-2 w-100 p-0\">\r\n\r\n                                <Card.Header className={`text-light bg-${post.color}`}>\r\n                                    {post.type}\r\n                                    <Link to={`/edit/${post.id}`}><Button className='position-absolute top-0 end-0' variant='transparent'><FontAwesomeIcon icon={faEdit} color='white'/></Button></Link>\r\n                                </Card.Header>\r\n\r\n                                <Card.Body className='text-start'>\r\n                                    {post.info}\r\n                                </Card.Body>\r\n\r\n                                <Card.Footer>\r\n                                    {post.assigned}\r\n                                </Card.Footer>\r\n\r\n                            </Card>\r\n                            }\r\n                        </div>\r\n                            )}\r\n                    </Col>\r\n\r\n                    <Col lg={2} className='bg-white d-flex flex-column rounded-3 p-3'>\r\n                        <h3 className='border-bottom border-info border-4'>Em Progresso</h3>\r\n                        {posts.map((post, idx) => \r\n                        <div key={idx}>\r\n                            {post.status === 'em progresso' &&\r\n                            post.type.toLowerCase().includes(searchTag) &&\r\n                            (post.assigned.toLowerCase().includes(search) ||\r\n                            post.info.toLowerCase().includes(search) ||\r\n                            post.type.toLowerCase().includes(search)\r\n                                ) &&\r\n                            <Card border={post.color} className=\"text-center mt-2 w-100 p-0\">\r\n\r\n                                <Card.Header className={`text-light bg-${post.color}`}>\r\n                                    {post.type}\r\n                                    <Link to={`/edit/${post.id}`}><Button className='position-absolute top-0 end-0' variant='transparent'><FontAwesomeIcon icon={faEdit} color='white'/></Button></Link>\r\n                                </Card.Header>\r\n\r\n                                <Card.Body className='text-start'>\r\n                                    {post.info}\r\n                                </Card.Body>\r\n\r\n                                <Card.Footer>\r\n                                    {post.assigned}\r\n                                </Card.Footer>\r\n\r\n                            </Card>\r\n                            }\r\n                        </div>\r\n                            )}\r\n                    </Col>\r\n\r\n                    <Col lg={2} className='bg-white d-flex flex-column rounded-3 p-3'>\r\n                        <h3 className='border-bottom border-info border-4'>Fechados</h3>\r\n                        {posts.map((post, idx) => \r\n                        <div key={idx}>\r\n                            {post.status === 'fechados' &&\r\n                            post.type.toLowerCase().includes(searchTag) &&\r\n                            (post.assigned.toLowerCase().includes(search) ||\r\n                            post.info.toLowerCase().includes(search) ||\r\n                            post.type.toLowerCase().includes(search)\r\n                                ) &&\r\n                            <Card border={post.color} className=\"text-center mt-2 w-100 p-0\">\r\n\r\n                                <Card.Header className={`text-light bg-${post.color}`}>\r\n                                    {post.type}\r\n                                    <Link to={`/edit/${post.id}`}><Button className='position-absolute top-0 end-0' variant='transparent'><FontAwesomeIcon icon={faEdit} color='white'/></Button></Link>\r\n                                </Card.Header>\r\n\r\n                                <Card.Body className='text-start'>\r\n                                    {post.info}\r\n                                </Card.Body>\r\n\r\n                                <Card.Footer>\r\n                                    {post.assigned}\r\n                                </Card.Footer>\r\n\r\n                            </Card>\r\n                            }\r\n                        </div>\r\n                            )}\r\n                    </Col>\r\n\r\n                    <Col lg={2} className='bg-white d-flex flex-column rounded-3 p-3'>\r\n                        <h3 className='border-bottom border-info border-4'>Para mim</h3>\r\n                        {posts.map((post, idx) => \r\n                        <div key={idx}>\r\n                            {post.assigned === currentUser.displayName &&\r\n                            post.type.toLowerCase().includes(searchTag) &&\r\n                            (post.assigned.toLowerCase().includes(search) ||\r\n                            post.info.toLowerCase().includes(search) ||\r\n                            post.type.toLowerCase().includes(search)\r\n                                ) &&\r\n                            <Card border={post.color} className=\"text-center mt-2 w-100 p-0\">\r\n\r\n                                <Card.Header className={`text-light bg-${post.color}`}>\r\n                                    {post.type}\r\n                                    <Link to={`/edit/${post.id}`}><Button className='position-absolute top-0 end-0' variant='transparent'><FontAwesomeIcon icon={faEdit} color='white'/></Button></Link>\r\n                                </Card.Header>\r\n\r\n                                <Card.Body className='text-start'>\r\n                                    {post.info}\r\n                                </Card.Body>\r\n\r\n                                <Card.Footer>\r\n                                    {post.assigned}\r\n                                </Card.Footer>\r\n\r\n                            </Card>\r\n                            }\r\n                        </div>\r\n                            )}\r\n                    </Col>\r\n                    \r\n                \r\n                </Row>\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React, { useRef, useState } from 'react';\r\nimport { Form, Button, Card, Alert, Spinner, Stack } from 'react-bootstrap'\r\n\r\n//contexts\r\nimport { useDB } from '../contexts/DBContext'\r\n\r\n//routing\r\nimport { Link, useNavigate } from 'react-router-dom'\r\n\r\n\r\nexport default function CreatePost() {\r\n    const infoRef = useRef();\r\n    const typeRef = useRef();\r\n    const nameRef = useRef();\r\n    const { createPost } = useDB();\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            await createPost(typeRef.current.value , infoRef.current.value, nameRef.current.value)\r\n            navigate(\"/posts\");\r\n        } catch {\r\n            setError('Falha ao criar')\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n    <div className='bg-primary d-flex align-items-center' style={{ minHeight: \"100vh\" }}>\r\n        <Card className='col-8 mx-auto'>\r\n            <Card.Body>\r\n                <h2 className='text-center mb-4'>Criar Bug</h2>\r\n                {error && <Alert variant='danger'>{error}</Alert>}\r\n                <Form onSubmit={handleSubmit} className='d-flex flex-column'>\r\n                    \r\n                    <Form.Group className='mb-3'>\r\n                        <Form.Label>Tipo</Form.Label>\r\n                        <Form.Select ref={typeRef} required>\r\n                            <option value=\"Bug\">Bug</option>\r\n                            <option value=\"Tarefa\">Tarefa</option>\r\n                            <option value=\"Crash\">Crash</option>\r\n                            <option value=\"Documentação\">Documentação</option>\r\n                        </Form.Select>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className='mb-3'>\r\n                        <Form.Label>Info</Form.Label>\r\n                        <Form.Control type=\"text\" ref={infoRef} required />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className='mb-3' required>\r\n                        <Form.Label>Para quem?</Form.Label>\r\n                        <Form.Control type=\"text\" ref={nameRef} required />\r\n                    </Form.Group>\r\n\r\n                    {loading ? \r\n                    <Spinner animation=\"border align-self-center\" /> : \r\n                    <Stack gap={2}>\r\n                        <Button className='w-100' type='submit'>Criar</Button>\r\n                        <Link to='/posts'><Button className='w-100' variant=\"outline-danger\">Cancelar</Button></Link>\r\n                    </Stack>\r\n                    }\r\n\r\n                </Form>\r\n            </Card.Body>\r\n        </Card>\r\n    </div>\r\n    )\r\n};\r\n\r\n","import React, { useRef, useState } from 'react';\r\nimport { Form, Button, Card, Alert, Spinner, Stack } from 'react-bootstrap'\r\n\r\n//contexts\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\n//routing\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\n\r\n\r\nexport default function UpdateProfile() {\r\n    const nameRef = useRef();\r\n    const photoURLRef = useRef();\r\n    const { currentUser, upProfile } = useAuth();\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const navigate = useNavigate();\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            setError('');\r\n            setLoading(true);\r\n            await upProfile({displayName: nameRef.current.value, photoURL: photoURLRef.current.value})\r\n            navigate(\"/posts\");\r\n        } catch {\r\n            setError('Algo deu errado');\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='bg-primary d-flex align-items-center' style={{ minHeight: \"100vh\" }}>\r\n            <Card className='col-8 mx-auto'>\r\n                <Card.Body >\r\n                    <h2 className='text-center mb-4'>Escolha um nome e foto</h2>\r\n                    {error && <Alert variant='danger'>{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit} className='d-flex flex-column'>\r\n                        \r\n                        <Form.Group className='mb-3'>\r\n                            <Form.Label>Nome</Form.Label>\r\n                            <Form.Control type=\"text\" ref={nameRef} required/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className='mb-3'>\r\n                            <Form.Label>Foto de perfil (URL)</Form.Label>\r\n                            <Form.Control type=\"url\" ref={photoURLRef} \r\n                            defaultValue={currentUser.photoURL}\r\n                            placeholder='Não obrigatório'/>\r\n                        </Form.Group>\r\n\r\n                        {loading ? <Spinner animation=\"border align-self-center\" /> : \r\n                        <Stack gap={2}>\r\n                            <Button className='w-100' type='submit'>Confirmar</Button>\r\n                        </Stack>\r\n                        }\r\n\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n};\r\n","import React, { useRef, useState } from 'react';\r\nimport { Form, Button, Card, Alert, Spinner, Stack } from 'react-bootstrap'\r\n\r\n//contexts\r\nimport { useDB } from '../contexts/DBContext'\r\n\r\n//routing\r\nimport { Link, useNavigate } from 'react-router-dom'\r\n\r\n\r\nexport default function EditPost({ postRef, typeValue, infoValue, assignedValue, statusValue }) {\r\n    const infoRef = useRef();\r\n    const typeRef = useRef();\r\n    const nameRef = useRef();\r\n    const statusRef = useRef();\r\n    const { editPost, deletePost } = useDB();\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            await editPost(postRef, typeRef.current.value, infoRef.current.value, nameRef.current.value, statusRef.current.value)\r\n            navigate(\"/posts\");\r\n        } catch {\r\n            setError('Falha ao editar')\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    async function handleDelete(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            await deletePost(postRef)\r\n            navigate(\"/posts\");\r\n        } catch {\r\n            setError('Falha ao deletar')\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n    <div className='bg-primary d-flex align-items-center' style={{ minHeight: \"100vh\" }}>\r\n        <Card className='col-8 mx-auto'>\r\n            <Card.Body>\r\n                <h2 className='text-center mb-4'>Editar Bug</h2>\r\n                {error && <Alert variant='danger'>{error}</Alert>}\r\n                <Form onSubmit={handleSubmit} className='d-flex flex-column'>\r\n                    \r\n                    <Form.Group className='mb-3'>\r\n                        <Form.Label>Tipo</Form.Label>\r\n                        <Form.Select defaultValue={typeValue} ref={typeRef} required>\r\n                            <option value=\"Bug\">Bug</option>\r\n                            <option value=\"Tarefa\">Tarefa</option>\r\n                            <option value=\"Crash\">Crash</option>\r\n                            <option value=\"Documentação\">Documentação</option>\r\n                        </Form.Select>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className='mb-3'>\r\n                        <Form.Label>Info</Form.Label>\r\n                        <Form.Control defaultValue={infoValue} type=\"text\" ref={infoRef} required />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className='mb-3' required>\r\n                        <Form.Label>Para quem?</Form.Label>\r\n                        <Form.Control defaultValue={assignedValue} type=\"text\" ref={nameRef} required />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className='mb-3'>\r\n                        <Form.Label>Estado</Form.Label>\r\n                        <Form.Select defaultValue={statusValue} ref={statusRef} required>\r\n                            <option value=\"abertos\">Aberto</option>\r\n                            <option value=\"reabertos\">Reaberto</option>\r\n                            <option value=\"em progresso\">Em Progresso</option>\r\n                            <option value=\"fechados\">Fechado</option>\r\n                        </Form.Select>\r\n                    </Form.Group>\r\n\r\n                    {loading ? \r\n                    <Spinner animation=\"border align-self-center\" /> : \r\n                    <Stack gap={2}>\r\n                        <Button className='w-100' type='submit'>Editar</Button>\r\n                        <Link to='/posts'><Button className='w-100' variant=\"outline-danger\">Cancelar</Button></Link>\r\n                        <Button className='w-100' variant=\"danger\" onClick={handleDelete}>Deletar</Button>\r\n                    </Stack>\r\n                    }\r\n\r\n                </Form>\r\n            </Card.Body>\r\n        </Card>\r\n    </div>\r\n    )\r\n};\r\n\r\n","import React from \"react\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\n\n//components\nimport SignUp from \"./components/SignUp\";\nimport Dashboard from \"./components/Dashboard\";\nimport Login from \"./components/Login\";\nimport ForgotPassword from \"./components/ForgotPassword\";\nimport UpdateProfile from \"./components/UpdateProfile\";\nimport Posts from \"./components/Posts\";\nimport CreatePost from \"./components/CreatePost\";\nimport Name from \"./components/Name.js\";\nimport EditPost from \"./components/EditPost.js\";\n\n//context hook\nimport { useAuth } from './contexts/AuthContext'\nimport { useDB } from './contexts/DBContext'\n\nfunction App() {\n  const { currentUser } = useAuth();\n  const { posts } = useDB();\n\n  return (\n      <Routes>\n        \n        <Route exact path=\"/\" element={currentUser == null ? <Navigate to='/login'/> : <Dashboard/>}/>\n        \n        <Route path='/cadastro' element={<SignUp/>}/>\n\n        <Route path='/nome' element={<Name/>}/>\n        \n        <Route path='/login' element={currentUser != null ? <Navigate to='/'/> : <Login/>}/>\n        \n        <Route path='/esqueci-senha' element={currentUser != null ? <Navigate to='/'/> : <ForgotPassword/>}/>\n        \n        <Route path='/update-profile' element={currentUser == null ? <Navigate to='/login'/> : <UpdateProfile/>}/>\n\n        <Route path='/posts' element={currentUser == null ? <Navigate to='/login'/> : <Posts/>}/>\n\n        <Route path='/create-post' element={currentUser == null ? <Navigate to='/login'/> : <CreatePost/>}/>\n\n        {posts.map(post => {\n            return <Route path={`/edit/${post.id}`} key={post.id} element={currentUser == null ? <Navigate to='/login'/> : \n            <EditPost \n            postRef={post.id}\n            typeValue={post.type}\n            infoValue={post.info}\n            assignedValue={post.assigned}\n            statusValue={post.status}\n             />} />\n        })}\n\n      </Routes>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\n\n//context\nimport { AuthProvider } from \"./contexts/AuthContext\";\nimport { DBProvider } from \"./contexts/DBContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <DBProvider>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </DBProvider>\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}